{"ast":null,"code":"export default {\n  name: 'AttendanceComp',\n  props: {\n    employees: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      search: '',\n      selectedEmployee: null,\n      selectedEmployeeId: '',\n      newEmployeeName: '',\n      showAddEmployeeForm: false\n    };\n  },\n  computed: {\n    filteredEmployees() {\n      if (!this.search) return this.employees;\n      return this.employees.filter(emp => emp.name.toLowerCase().includes(this.search.toLowerCase()));\n    }\n  },\n  methods: {\n    selectEmployee(employee) {\n      const clone = JSON.parse(JSON.stringify(employee));\n      if (!Array.isArray(clone.attendance)) clone.attendance = [];\n      if (!Array.isArray(clone.leaveRequests)) clone.leaveRequests = [];\n      this.selectedEmployee = clone;\n    },\n    selectEmployeeById() {\n      const emp = this.employees.find(e => e.employeeId == this.selectedEmployeeId);\n      if (emp) this.selectEmployee(emp);\n    },\n    addEmployee() {\n      if (!this.newEmployeeName.trim()) return;\n      this.$emit('add-employee', this.newEmployeeName.trim());\n      this.newEmployeeName = '';\n      this.showAddEmployeeForm = false;\n    },\n    deleteSelectedEmployee() {\n      if (this.selectedEmployee && confirm('Are you sure you want to delete this employee?')) {\n        this.$emit('delete-employee', this.selectedEmployee.employeeId);\n        this.selectedEmployee = null;\n        this.selectedEmployeeId = '';\n      }\n    },\n    addAttendanceRecord() {\n      this.selectedEmployee.attendance.push({\n        date: new Date().toISOString().split('T')[0],\n        status: 'Present'\n      });\n    },\n    removeAttendance(index) {\n      this.selectedEmployee.attendance.splice(index, 1);\n    },\n    addLeaveRequest() {\n      this.selectedEmployee.leaveRequests.push({\n        date: new Date().toISOString().split('T')[0],\n        reason: 'Personal',\n        status: 'Pending'\n      });\n    },\n    removeLeaveRequest(index) {\n      this.selectedEmployee.leaveRequests.splice(index, 1);\n    },\n    saveChanges() {\n      this.$emit('update-employee', JSON.parse(JSON.stringify(this.selectedEmployee)));\n      alert('Changes saved successfully!');\n      this.selectedEmployee = null;\n      this.selectedEmployeeId = '';\n    },\n    cancelEdit() {\n      this.selectedEmployee = null;\n      this.selectedEmployeeId = '';\n    }\n  }\n};","map":{"version":3,"names":["name","props","employees","type","Array","required","data","search","selectedEmployee","selectedEmployeeId","newEmployeeName","showAddEmployeeForm","computed","filteredEmployees","filter","emp","toLowerCase","includes","methods","selectEmployee","employee","clone","JSON","parse","stringify","isArray","attendance","leaveRequests","selectEmployeeById","find","e","employeeId","addEmployee","trim","$emit","deleteSelectedEmployee","confirm","addAttendanceRecord","push","date","Date","toISOString","split","status","removeAttendance","index","splice","addLeaveRequest","reason","removeLeaveRequest","saveChanges","alert","cancelEdit"],"sources":["C:\\Users\\Student\\project2_\\ModernTech_Solutions\\frontend\\src\\components\\AttendanceComp.vue"],"sourcesContent":["<template>\r\n  <div class=\"attendance-system\">\r\n    <h1>Employee Attendance System</h1>\r\n\r\n<!-- Employee Search Dropdown - \r\n this lets you select an employee by name from a dropdown-->\r\n    <div class=\"search-box\">\r\n      \r\n      <select v-model=\"selectedEmployeeId\" @change=\"selectEmployeeById\" class=\"search-input\">\r\n        <option value=\"\">Select employee...</option>\r\n        <option v-for=\"emp in employees\" :key=\"emp.employeeId\" :value=\"emp.employeeId\">\r\n          {{ emp.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Toggle Button for Add Employee Form - button toggles a form to add a new employee by name-->\r\n    <button @click=\"showAddEmployeeForm = !showAddEmployeeForm\" class=\"btn btn-primary\" style=\"margin-bottom: 10px;\">\r\n      {{ showAddEmployeeForm ? 'Cancel' : 'Add New Employee' }}\r\n    </button>\r\n\r\n    <!-- Add New Employee Form -->\r\n    <div v-if=\"showAddEmployeeForm\" class=\"add-employee-form\" style=\"margin-bottom: 20px;\">\r\n      <input\r\n        v-model=\"newEmployeeName\"\r\n        placeholder=\"Enter new employee name\"\r\n        class=\"form-control\"\r\n      />\r\n      <button @click=\"addEmployee\" class=\"btn btn-success\" style=\"margin-top: 5px;\">\r\n        Add New Employee\r\n      </button>\r\n    </div>\r\n\r\n\r\n    <!-- Selected Employee Form - if an employee is selected, shows their name, attendance records(with add/remove/edit), and leave requests (with add/remove/edit)-->\r\n    <div v-if=\"selectedEmployee\" class=\"employee-form\">\r\n      <h2>{{ selectedEmployee.name }}</h2>\r\n\r\n      <!-- Attendance Records -->\r\n      <div class=\"form-section\">\r\n        <h3>Attendance Records</h3>\r\n        <table class=\"records-table\" v-if=\"selectedEmployee.attendance.length > 0\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Status</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(record, index) in selectedEmployee.attendance\" :key=\"index\">\r\n              <td>\r\n                <input type=\"date\" v-model=\"record.date\" class=\"form-control\" />\r\n              </td>\r\n              <td>\r\n                <select v-model=\"record.status\" class=\"form-control\">\r\n                  <option value=\"Present\">Present</option>\r\n                  <option value=\"Absent\">Absent</option>\r\n                  <option value=\"Late\">Late</option>\r\n                  <option value=\"Half Day\">Half Day</option>\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <button @click=\"removeAttendance(index)\" class=\"btn btn-danger\">Remove</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <p v-else>No attendance records.</p>\r\n        <button @click=\"addAttendanceRecord\" class=\"btn btn-primary\">Add Attendance Record</button>\r\n      </div>\r\n\r\n      <!-- Leave Requests -->\r\n      <div class=\"form-section\">\r\n        <h3>Leave Requests</h3>\r\n        <table class=\"records-table\" v-if=\"selectedEmployee.leaveRequests.length > 0\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Reason</th>\r\n              <th>Status</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(request, index) in selectedEmployee.leaveRequests\" :key=\"index\">\r\n              <td>\r\n                <input type=\"date\" v-model=\"request.date\" class=\"form-control\" />\r\n              </td>\r\n              <td>\r\n                <select v-model=\"request.reason\" class=\"form-control\">\r\n                  <option value=\"Sick Leave\">Sick Leave</option>\r\n                  <option value=\"Vacation\">Vacation</option>\r\n                  <option value=\"Personal\">Personal</option>\r\n                  <option value=\"Family Responsibility\">Family Responsibility</option>\r\n                  <option value=\"Medical Appointment\">Medical Appointment</option>\r\n                  <option value=\"Bereavement\">Bereavement</option>\r\n                  <option value=\"Childcare\">Childcare</option>\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select v-model=\"request.status\" class=\"form-control\">\r\n                  <option value=\"Pending\">Pending</option>\r\n                  <option value=\"Approved\">Approved</option>\r\n                  <option value=\"Denied\">Denied</option>\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <button @click=\"removeLeaveRequest(index)\" class=\"btn btn-danger\">Remove</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <p v-else>No leave requests.</p>\r\n        <button @click=\"addLeaveRequest\" class=\"btn btn-primary\">Add Leave Request</button>\r\n      </div>\r\n\r\n      <button @click=\"saveChanges\" class=\"btn btn-success\">Save Changes</button>\r\n      <button @click=\"cancelEdit\" class=\"btn btn-secondary\" style=\"margin-left:10px;\">Cancel</button>\r\n      <button @click=\"deleteSelectedEmployee\" class=\"btn btn-danger\" style=\"margin-left:10px;\">Delete</button>\r\n    </div>\r\n\r\n     <div v-else class=\"employee-list\">\r\n  <div v-if=\"search\">\r\n    <div\r\n      v-for=\"employee in filteredEmployees\"\r\n      :key=\"employee.employeeId\"\r\n      class=\"employee-card\"\r\n      @click=\"selectEmployee(employee)\"\r\n    >\r\n      {{ employee.name }}\r\n    </div>\r\n    \r\n  </div>\r\n  <div v-else class=\"no-results\">\r\n    \r\n  </div>\r\n</div>\r\n    \r\n  </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'AttendanceComp',\r\n  props: {\r\n    employees: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      search: '',\r\n      selectedEmployee: null,\r\n      selectedEmployeeId: '',\r\n      newEmployeeName: '',\r\n      showAddEmployeeForm: false\r\n    }\r\n  },\r\n  computed: {\r\n    filteredEmployees() {\r\n      if (!this.search) return this.employees\r\n      return this.employees.filter(emp =>\r\n        emp.name.toLowerCase().includes(this.search.toLowerCase())\r\n      )\r\n    }\r\n  },\r\n  methods: {\r\n  selectEmployee(employee) {\r\n    const clone = JSON.parse(JSON.stringify(employee));\r\n    if (!Array.isArray(clone.attendance)) clone.attendance = [];\r\n    if (!Array.isArray(clone.leaveRequests)) clone.leaveRequests = [];\r\n    this.selectedEmployee = clone;\r\n  },\r\n  \r\n  selectEmployeeById() {\r\n    const emp = this.employees.find(e => e.employeeId == this.selectedEmployeeId)\r\n    if (emp) this.selectEmployee(emp)\r\n  },\r\n  addEmployee() {\r\n    if (!this.newEmployeeName.trim()) return\r\n    this.$emit('add-employee', this.newEmployeeName.trim())\r\n    this.newEmployeeName = ''\r\n    this.showAddEmployeeForm = false\r\n  },\r\n\r\n  deleteSelectedEmployee() {\r\n    if (this.selectedEmployee && confirm('Are you sure you want to delete this employee?')) {\r\n      this.$emit('delete-employee', this.selectedEmployee.employeeId);\r\n      this.selectedEmployee = null;\r\n      this.selectedEmployeeId = '';\r\n    }\r\n  },\r\n  addAttendanceRecord() {\r\n    this.selectedEmployee.attendance.push({\r\n      date: new Date().toISOString().split('T')[0],\r\n      status: 'Present'\r\n    })\r\n  },\r\n  removeAttendance(index) {\r\n    this.selectedEmployee.attendance.splice(index, 1)\r\n  },\r\n  addLeaveRequest() {\r\n    this.selectedEmployee.leaveRequests.push({\r\n      date: new Date().toISOString().split('T')[0],\r\n      reason: 'Personal',\r\n      status: 'Pending'\r\n    })\r\n  },\r\n  removeLeaveRequest(index) {\r\n    this.selectedEmployee.leaveRequests.splice(index, 1)\r\n  },\r\n  saveChanges() {\r\n    this.$emit('update-employee', JSON.parse(JSON.stringify(this.selectedEmployee)))\r\n    alert('Changes saved successfully!')\r\n    this.selectedEmployee = null\r\n    this.selectedEmployeeId = ''\r\n  },\r\n  cancelEdit() {\r\n    this.selectedEmployee = null\r\n    this.selectedEmployeeId = ''\r\n  }\r\n}\r\n}\r\n  \r\n</script>\r\n\r\n<style scoped>\r\n.attendance-system {\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  padding: 2vw;\r\n  \r\n}\r\n.search-box {\r\n  margin-bottom: 20px;\r\n}\r\n.search-input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-top: 5px;\r\n  border: 1px solid #2199ea;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n}\r\n.employee-form {\r\n  background: #f9f9f9;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  margin-top: 20px;\r\n}\r\n.form-section {\r\n  margin-bottom: 30px;\r\n}\r\n.records-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 15px;\r\n}\r\n.records-table th, .records-table td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n.records-table th {\r\n  background-color: #f2f2f2;\r\n}\r\n.form-control {\r\n  width: 100%;\r\n  padding: 5px;\r\n}\r\n.btn {\r\n  padding: 5px 10px;\r\n  margin-right: 5px;\r\n  cursor: pointer;\r\n  border-radius: 3px;\r\n  border: none;\r\n}\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n.btn-danger {\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n.btn-success {\r\n  background-color: #28a745;\r\n  color: white;\r\n  padding: 8px 15px;\r\n}\r\n.btn-secondary {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n.employee-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\r\n  gap: 16px;\r\n  margin-top: 20px;\r\n}\r\n.employee-card {\r\n  padding: 15px;\r\n  background: #f0f0f0;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background 0.2s;\r\n}\r\n.employee-card:hover {\r\n  background: #e0e0e0;\r\n}\r\n@media (max-width: 900px) {\r\n  .attendance-system {\r\n    padding: 3vw 1vw;\r\n  }\r\n  .employee-list {\r\n    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\r\n    gap: 12px;\r\n  }\r\n}\r\n@media (max-width: 600px) {\r\n  .attendance-system {\r\n    padding: 2vw 0.5vw;\r\n  }\r\n  .employee-list {\r\n    grid-template-columns: 1fr;\r\n    gap: 8px;\r\n  }\r\n  .employee-card {\r\n    padding: 10px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}